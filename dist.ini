name			= Pod-Spell-CommonMistakes
author			= Apocalypse <APOCAL@cpan.org>
license			= Perl_5
copyright_holder	= Apocalypse

; TODO add Test::Apocalypse generator

; -- start off by bumping the version
[BumpVersionFromGit]
version_regexp = ^release-(.+)$

; -- start the basic dist skeleton
[AllFiles]
[PruneCruft]			; automatically prune cruft defined by RJBS :)
[AutoPrereq]			; automatically find our prereqs
[GenerateFile / manifest]	; make our MANIFEST.SKIP
filename = MANIFEST.SKIP
content = # Not used, because Dist::Zilla rocks!
content = # skip Eclipse IDE stuff
content = \.includepath$
content = \.project$
content = \.settings/
content =
content = # Avoid version control files.
content = \B\.svn\b
content = \B\.git\b
content = ^\.gitignore$
content =
content = # Avoid Makemaker generated and utility files.
content = \bMakefile$
content = \bblib/
content = \bMakeMaker-\d
content = \bpm_to_blib$
content =
content = # Avoid Module::Build generated and utility files.
content = \bBuild$
content = \b_build/
content = ^MYMETA.yml$
content =
content = # Avoid temp and backup files.
content = ~$
content = \.old$
content = \#$
content = \b\.#
content = \.bak$
content =
content = # our tarballs
content = \.tar\.gz$
content = \breleases/
[ManifestSkip]			; skip files that matches MANIFEST.SKIP
skipfile = MANIFEST.SKIP

; -- munge files
[PkgVersion]			; put the "our $VERSION = ...;" line in modules
[Prepender]			; automatically add lines following the shebang in modules
copyright = 1
line = use strict; use warnings;
[PodWeaver]			; weave our POD and add useful boilerplate
;config_plugin = @APOCAL # TODO use my PodWeaver bundle

; -- update the Changelog
[NextRelease] ; the time_zone param requires unreleased dzil, gotta wait for rjbs to release it :)
time_zone = UTC
filename = Changes
format = * %v%n%tReleased: %{yyyy-MM-dd HH:mm:ss VVVV}d
[ChangelogFromGit]		; generate CommitLog from git history
tag_regexp = ^release-(.+)$
file_name = CommitLog

; -- generate/process meta-information
[ExecDir]			; automatically install files from bin/ directory as executables
dir = bin
[ShareDir]			; automatically install File::ShareDir files from share/
dir = share
[MetaProvides::Package]		; get provides from package definitions in files
[Bugtracker]			; set bugtracker to http://rt.cpan.org/Public/Dist/Display.html?Name=$dist
[Repository]			; set git repository path by looking at git configs
git_remote = origin
[Homepage]			; set homepage to http://search.cpan.org/dist/$dist/
[MetaResources]			; add arbitrary resources to metadata # TODO add the usual list of stuff found in my POD?
license = http://dev.perl.org/licenses/
[MetaConfig]			; dump dzil config into metadata

; -- generate meta files
[MetaNoIndex]			; tell PAUSE to not index those stuff # TODO add only if they exist! ( look at DZP::Bundle::AVAR )
directory = inc
directory = t
directory = xt
directory = examples
directory = share
[License]			; create LICENSE file
[MakeMaker]			; create Makefile.PL file
;[ModuleBuild]			; create Build.PL file # TODO I need to make a custom plugin so I can specify both builders but prereq only M::B in META.*
[MetaYAML]			; create META.yml file
[MetaJSON]			; create META.json file
[ReadmeFromPod]			; create README file
[InstallGuide]			; create INSTALL file
;[Signature]			; create SIGNATURE file when we are building a release ( TODO setup Module::Signature )
;sign = archive
[Manifest]			; finally, create the MANIFEST file ( must be the last thing we do )

; -- pre-release
[TestRelease]
[Git::Check]
[ConfirmRelease]

; -- release
;[UploadToCPAN]	TODO not yet... I don't want to accidentally upload stuff!

; -- post-release
[ArchiveRelease]		; archive our tarballs under releases/
directory = releases
[Git::Commit]			; commit the dzil-generated stuff
[Git::Tag]			; tag our new release
tag_format = release-%v
[Git::Push]			; automatically push to the "origin" defined in .git/config
push_to = origin

